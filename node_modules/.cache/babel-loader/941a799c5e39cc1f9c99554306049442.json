{"ast":null,"code":"import { ADD_PROFILE, DELETE_PROFILE, SET_CURRENT, CLEAR_CURRENT, UPDATE_PROFILE, FILTER_PROFILES, CLEAR_FILTER, CONTACT_ERROR, GET_PROFILES, CLEAR_PROFILES, GET_ALLPROFILES } from \"../types\";\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_PROFILES:\n      return { ...state,\n        profiles: action.payload,\n        loading: false\n      };\n\n    case ADD_PROFILE:\n      return { ...state,\n        profiles: [action.payload, ...state.profiles],\n        loading: false\n      };\n\n    case UPDATE_PROFILE:\n      return { ...state,\n        profiles: state.profiles.map(profile => profile._id === action.payload._id ? action.payload : profile),\n        loading: false\n      };\n\n    case DELETE_PROFILE:\n      return { ...state,\n        profiles: state.profiles.filter(profile => profile._id !== action.payload),\n        loading: false\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case FILTER_PROFILES:\n      return { ...state,\n        filtered: state.profiles.filter(profile => {\n          const regex = new RegExp(`${action.payload}`, \"gi\");\n          return profile.firstname.match(regex) || profile.lastname.match(regex) || profile.dateOfBirth.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Adeola.bamigboye/Desktop/generation/client/src/components/context/profile/profileReducer.js"],"names":["ADD_PROFILE","DELETE_PROFILE","SET_CURRENT","CLEAR_CURRENT","UPDATE_PROFILE","FILTER_PROFILES","CLEAR_FILTER","CONTACT_ERROR","GET_PROFILES","CLEAR_PROFILES","GET_ALLPROFILES","state","action","type","profiles","payload","loading","map","profile","_id","filter","current","filtered","regex","RegExp","firstname","match","lastname","dateOfBirth","error"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,EAQEC,aARF,EASEC,YATF,EAUEC,cAVF,EAWEC,eAXF,QAYO,UAZP;AAcA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,YAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELG,QAAAA,QAAQ,EAAGF,MAAM,CAACG,OAFb;AAGLC,QAAAA,OAAO,EAAG;AAHL,OAAP;;AAKF,SAAKhB,WAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELG,QAAAA,QAAQ,EAAE,CAAEF,MAAM,CAACG,OAAT,EAAkB,GAAGJ,KAAK,CAACG,QAA3B,CAFL;AAGLE,QAAAA,OAAO,EAAG;AAHL,OAAP;;AAKF,SAAKZ,cAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,GAAf,CAAoBC,OAAD,IAC3BA,OAAO,CAACC,GAAR,KAAgBP,MAAM,CAACG,OAAP,CAAeI,GAA/B,GAAqCP,MAAM,CAACG,OAA5C,GAAsDG,OAD9C,CAFL;AAKLF,QAAAA,OAAO,EAAG;AALL,OAAP;;AAOF,SAAKf,cAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,MAAf,CACPF,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBP,MAAM,CAACG,OAD5B,CAFL;AAKLC,QAAAA,OAAO,EAAG;AALL,OAAP;;AAOF,SAAKd,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELU,QAAAA,OAAO,EAAET,MAAM,CAACG;AAFX,OAAP;;AAIF,SAAKZ,aAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELU,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKhB,eAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELW,QAAAA,QAAQ,EAAEX,KAAK,CAACG,QAAN,CAAeM,MAAf,CAAuBF,OAAD,IAAa;AAC3C,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEZ,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBACEG,OAAO,CAACO,SAAR,CAAkBC,KAAlB,CAAwBH,KAAxB,KAAkCL,OAAO,CAACS,QAAR,CAAiBD,KAAjB,CAAuBH,KAAvB,CAAlC,IAAmEL,OAAO,CAACU,WAAR,CAAoBF,KAApB,CAA0BH,KAA1B,CADrE;AAGD,SALS;AAFL,OAAP;;AASF,SAAKjB,YAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELW,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF,SAAMf,aAAN;AACE,aAAM,EACJ,GAAGI,KADC;AAEJkB,QAAAA,KAAK,EAAGjB,MAAM,CAACG;AAFX,OAAN;;AAKF;AACE,aAAOJ,KAAP;AA7DJ;AA+DD,CAhED","sourcesContent":["import {\r\n  ADD_PROFILE,\r\n  DELETE_PROFILE,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_PROFILE,\r\n  FILTER_PROFILES,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n  GET_PROFILES,\r\n  CLEAR_PROFILES,\r\n  GET_ALLPROFILES\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles : action.payload,\r\n        loading : false\r\n      }\r\n    case ADD_PROFILE:\r\n      return {\r\n        ...state,\r\n        profiles: [ action.payload, ...state.profiles],\r\n        loading : false\r\n      };\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profiles: state.profiles.map((profile) =>\r\n          profile._id === action.payload._id ? action.payload : profile\r\n        ),\r\n        loading : false\r\n      };\r\n    case DELETE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profiles: state.profiles.filter(\r\n          (profile) => profile._id !== action.payload\r\n        ),\r\n        loading : false\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case FILTER_PROFILES:\r\n      return {\r\n        ...state,\r\n        filtered: state.profiles.filter((profile) => {\r\n          const regex = new RegExp(`${action.payload}`, \"gi\");\r\n          return (\r\n            profile.firstname.match(regex) || profile.lastname.match(regex) || profile.dateOfBirth.match(regex)\r\n          );\r\n        }),\r\n      };\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filtered: null,\r\n      };\r\n    case  CONTACT_ERROR:\r\n      return{\r\n        ...state,\r\n        error : action.payload\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}