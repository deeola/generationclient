{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adeola.bamigboye\\\\Desktop\\\\generation\\\\client\\\\src\\\\components\\\\payment\\\\HomePayment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios'; // MUI Components\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField'; // stripe\n\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js'; // Util imports\n\nimport { makeStyles } from '@material-ui/core/styles'; // Custom Components\n\nimport CardInput from './CardInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignContent: 'flex-start'\n  },\n  div: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignContent: 'flex-start',\n    justifyContent: 'space-between'\n  },\n  button: {\n    margin: '2em auto 1em'\n  }\n});\n\nconst HomePayment = () => {\n  _s();\n\n  const classes = useStyles(); // State\n  // const [email, setEmail] = useState('');\n  // const stripe = useStripe();\n  // const elements = useElements();\n  // const handleSubmitSub = async (event) => {\n  //   if (!stripe || !elements) {\n  //     // Stripe.js has not yet loaded.\n  //     // Make sure to disable form submission until Stripe.js has loaded.\n  //     return;\n  //   }\n  //   const result = await stripe.createPaymentMethod({\n  //     type: 'card',\n  //     card: elements.getElement(CardElement),\n  //     billing_details: {\n  //       email: email,\n  //     },\n  //   });\n  //   if (result.error) {\n  //     console.log(result.error.message);\n  //   } else {\n  //     const res = await axios.post('/sub', {'payment_method': result.paymentMethod.id, 'email': email});\n  //     // eslint-disable-next-line camelcase\n  //     const {client_secret, status} = res.data;\n  //     if (status === 'requires_action') {\n  //       stripe.confirmCardPayment(client_secret).then(function(result) {\n  //         if (result.error) {\n  //           console.log('There was an issue!');\n  //           console.log(result.error);\n  //           // Display error message in your UI.\n  //           // The card was declined (i.e. insufficient funds, card has expired, etc)\n  //         } else {\n  //           console.log('You got the money!');\n  //           // Show a success message to your customer\n  //         }\n  //       });\n  //     } else {\n  //       console.log('You got the money!');\n  //       // No additional information was needed\n  //       // Show a success message to your customer\n  //     }\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      className: classes.content,\n      children: /*#__PURE__*/_jsxDEV(CardInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePayment, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = HomePayment;\nexport default HomePayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePayment\");","map":{"version":3,"sources":["C:/Users/Adeola.bamigboye/Desktop/generation/client/src/components/payment/HomePayment.js"],"names":["React","useState","axios","Button","Card","CardContent","TextField","useStripe","useElements","CardElement","makeStyles","CardInput","useStyles","content","display","flexDirection","alignContent","div","justifyContent","button","margin","HomePayment","classes","root"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB,C,CACA;;AACA,SAAQC,SAAR,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAkD,yBAAlD,C,CACA;;AACA,SAAQC,UAAR,QAAyB,0BAAzB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC;AAE3BG,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,aAAa,EAAE,QAFR;AAGPC,IAAAA,YAAY,EAAE;AAHP,GAFkB;AAO3BC,EAAAA,GAAG,EAAE;AACHH,IAAAA,OAAO,EAAE,MADN;AAEHC,IAAAA,aAAa,EAAE,KAFZ;AAGHC,IAAAA,YAAY,EAAE,YAHX;AAIHE,IAAAA,cAAc,EAAE;AAJb,GAPsB;AAa3BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE;AADF;AAbmB,CAAD,CAA5B;;AAkBA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,OAAO,GAAGV,SAAS,EAAzB,CADwB,CAExB;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEU,OAAO,CAACC,IAAzB;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAED,OAAO,CAACT,OAAhC;AAAA,6BAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA3DD;;GAAMQ,W;UACYT,S;;;KADZS,W;AA6DN,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport axios from 'axios';\r\n// MUI Components\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport TextField from '@material-ui/core/TextField';\r\n// stripe\r\nimport {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\r\n// Util imports\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n// Custom Components\r\nimport CardInput from './CardInput';\r\n\r\nconst useStyles = makeStyles({\r\n  \r\n  content: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignContent: 'flex-start',\r\n  },\r\n  div: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignContent: 'flex-start',\r\n    justifyContent: 'space-between',\r\n  },\r\n  button: {\r\n    margin: '2em auto 1em',\r\n  },\r\n});\r\n\r\nconst HomePayment = () => {\r\n  const classes = useStyles();\r\n  // State\r\n  // const [email, setEmail] = useState('');\r\n\r\n  // const stripe = useStripe();\r\n  // const elements = useElements();\r\n\r\n  \r\n  // const handleSubmitSub = async (event) => {\r\n  //   if (!stripe || !elements) {\r\n  //     // Stripe.js has not yet loaded.\r\n  //     // Make sure to disable form submission until Stripe.js has loaded.\r\n  //     return;\r\n  //   }\r\n\r\n  //   const result = await stripe.createPaymentMethod({\r\n  //     type: 'card',\r\n  //     card: elements.getElement(CardElement),\r\n  //     billing_details: {\r\n  //       email: email,\r\n  //     },\r\n  //   });\r\n\r\n  //   if (result.error) {\r\n  //     console.log(result.error.message);\r\n  //   } else {\r\n  //     const res = await axios.post('/sub', {'payment_method': result.paymentMethod.id, 'email': email});\r\n  //     // eslint-disable-next-line camelcase\r\n  //     const {client_secret, status} = res.data;\r\n\r\n  //     if (status === 'requires_action') {\r\n  //       stripe.confirmCardPayment(client_secret).then(function(result) {\r\n  //         if (result.error) {\r\n  //           console.log('There was an issue!');\r\n  //           console.log(result.error);\r\n  //           // Display error message in your UI.\r\n  //           // The card was declined (i.e. insufficient funds, card has expired, etc)\r\n  //         } else {\r\n  //           console.log('You got the money!');\r\n  //           // Show a success message to your customer\r\n  //         }\r\n  //       });\r\n  //     } else {\r\n  //       console.log('You got the money!');\r\n  //       // No additional information was needed\r\n  //       // Show a success message to your customer\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.content}>\r\n\r\n        <CardInput />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default HomePayment;\r\n"]},"metadata":{},"sourceType":"module"}