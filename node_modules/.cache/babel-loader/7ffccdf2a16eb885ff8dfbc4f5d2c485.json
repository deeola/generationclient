{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport AuthContext from \"../context/auth/authContext\";\nimport AlertContext from \"../context/alert/alertContext\";\n\nconst useSubscribe = (callback, ValidateSubscribe) => {\n  _s();\n\n  const history = useNavigate();\n  const authContext = useContext(AuthContext);\n  const alertContext = useContext(AlertContext);\n  const {\n    setAlert\n  } = alertContext;\n  const {\n    login,\n    myerror,\n    clearErrors,\n    isAuthenticated\n  } = authContext; //GENERAL\n\n  const [error, setError] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false); //SIGN IN\n\n  const [subscribeValues, setSignValues] = useState({\n    email: \"\"\n  });\n\n  const handleChangeSubscribe = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSignValues({ ...subscribeValues,\n      [name]: value\n    });\n  };\n\n  const sub = subscribeValues; //Subscribe\n\n  const onSubmitSubscribe = e => {\n    setError(ValidateSubscribe(subscribeValues)); // login(sub);\n\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(error).length === 0 && isSubmitting) {\n      callback(); // history(\"/\");\n    } // eslint-disable-next-line\n\n  }, [error]);\n  return {\n    subscribeValues,\n    onSubmitSubscribe,\n    handleChangeSubscribe,\n    error\n  };\n};\n\n_s(useSubscribe, \"0iwtqImOC5YHexBYSX0mDXxRkic=\", false, function () {\n  return [useNavigate];\n});\n\nexport default useSubscribe;","map":{"version":3,"sources":["C:/Users/Adeola.bamigboye/Desktop/generation/client/src/components/registration/useSubscribe.js"],"names":["useEffect","useState","useContext","useNavigate","AuthContext","AlertContext","useSubscribe","callback","ValidateSubscribe","history","authContext","alertContext","setAlert","login","myerror","clearErrors","isAuthenticated","error","setError","isSubmitting","setIsSubmitting","subscribeValues","setSignValues","email","handleChangeSubscribe","e","name","value","target","sub","onSubmitSubscribe","preventDefault","Object","keys","length"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,MAAMC,YAAY,GAAE,CAACC,QAAD,EAAWC,iBAAX,KAAiC;AAAA;;AACnD,QAAMC,OAAO,GAAGN,WAAW,EAA3B;AAEA,QAAMO,WAAW,GAAGR,UAAU,CAACE,WAAD,CAA9B;AACA,QAAMO,YAAY,GAAGT,UAAU,CAACG,YAAD,CAA/B;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAeD,YAArB;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,WAAlB;AAA+BC,IAAAA;AAA/B,MAAmDN,WAAzD,CAPmD,CASnD;;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,KAAD,CAAhD,CAZmD,CAcnD;;AACA,QAAM,CAACoB,eAAD,EAAkBC,aAAlB,IAAmCrB,QAAQ,CAAC;AAChDsB,IAAAA,KAAK,EAAE;AADyC,GAAD,CAAjD;;AAIA,QAAMC,qBAAqB,GAAIC,CAAD,IAAO;AACnC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAN,IAAAA,aAAa,CAAC,EACZ,GAAGD,eADS;AAEZ,OAACK,IAAD,GAAQC;AAFI,KAAD,CAAb;AAID,GAND;;AAQA,QAAME,GAAG,GAAGR,eAAZ,CA3BmD,CA+BnD;;AAEA,QAAMS,iBAAiB,GAAIL,CAAD,IAAO;AAC/BP,IAAAA,QAAQ,CAACV,iBAAiB,CAACa,eAAD,CAAlB,CAAR,CAD+B,CAE/B;;AACAI,IAAAA,CAAC,CAACM,cAAF;AAEAX,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAND;;AAQApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgC,MAAM,CAACC,IAAP,CAAYhB,KAAZ,EAAmBiB,MAAnB,KAA8B,CAA9B,IAAmCf,YAAvC,EAAqD;AACnDZ,MAAAA,QAAQ,GAD2C,CAEnD;AACD,KAJa,CAKd;;AACD,GANQ,EAMN,CAACU,KAAD,CANM,CAAT;AAQA,SAAO;AACLI,IAAAA,eADK;AAELS,IAAAA,iBAFK;AAGLN,IAAAA,qBAHK;AAILP,IAAAA;AAJK,GAAP;AAMD,CAvDD;;GAAMX,Y;UACYH,W;;;AAwDlB,eAAeG,YAAf","sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport AuthContext from \"../context/auth/authContext\";\r\nimport AlertContext from \"../context/alert/alertContext\";\r\n\r\nconst useSubscribe= (callback, ValidateSubscribe) => {\r\n  const history = useNavigate();\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { setAlert } = alertContext;\r\n  const { login, myerror, clearErrors, isAuthenticated } = authContext;\r\n\r\n  //GENERAL\r\n\r\n  const [error, setError] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  //SIGN IN\r\n  const [subscribeValues, setSignValues] = useState({\r\n    email: \"\"\r\n  });\r\n\r\n  const handleChangeSubscribe = (e) => {\r\n    const { name, value } = e.target;\r\n    setSignValues({\r\n      ...subscribeValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const sub = subscribeValues;\r\n\r\n\r\n\r\n  //Subscribe\r\n\r\n  const onSubmitSubscribe = (e) => {\r\n    setError(ValidateSubscribe(subscribeValues));\r\n    // login(sub);\r\n    e.preventDefault();\r\n    \r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(error).length === 0 && isSubmitting) {\r\n      callback();\r\n      // history(\"/\");\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [error]);\r\n\r\n  return {\r\n    subscribeValues,\r\n    onSubmitSubscribe,\r\n    handleChangeSubscribe,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useSubscribe;\r\n"]},"metadata":{},"sourceType":"module"}