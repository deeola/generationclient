{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adeola.bamigboye\\\\Desktop\\\\generation\\\\client\\\\src\\\\components\\\\context\\\\auth\\\\AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from \"react\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\nimport axios from \"axios\";\nimport setAuthToken from \"../../../utils/setAuthToken\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERROR } from \"../types\"; // stripe\n\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  // Navigation\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    myerror: null,\n    subscribed: false\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); ///load user\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get(\"/auth\");\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; //register user\n\n\n  const register = async FormData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/users\", FormData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //login user\n\n\n  const login = async FormData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/auth\", FormData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //logout user\n\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  }); //clear errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERROR\n  }); //SUB\n\n\n  const [email, setEmail] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmitSub = async (myMail, formDatas) => {\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const result = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n      billing_details: {\n        email: myMail\n      }\n    });\n\n    if (result.error) {\n      console.log(result.error.message);\n    } else {\n      const res = await axios.post('/sub', {\n        'payment_method': result.paymentMethod.id,\n        'email': myMail\n      }); // eslint-disable-next-line camelcase\n\n      const {\n        client_secret,\n        status\n      } = res.data;\n\n      if (status === 'requires_action') {\n        stripe.confirmCardPayment(client_secret).then(function (result) {\n          if (result.error) {\n            console.log('There was an issue!');\n            console.log(result.error); // Display error message in your UI.\n            // The card was declined (i.e. insufficient funds, card has expired, etc)\n\n            console.log('You got the money!'); // Show a success message to your customer\n          }\n        });\n      } else {\n        register(formDatas);\n        console.log('You got the moneys!');\n      }\n    }\n  }; //RETURN\n\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      myerror: state.myerror,\n      register,\n      loadUser,\n      login,\n      logout,\n      clearErrors,\n      handleSubmitSub\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"1vRqqpK1WbW4C14KkeObT1myijs=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["C:/Users/Adeola.bamigboye/Desktop/generation/client/src/components/context/auth/AuthState.js"],"names":["React","useReducer","useState","AuthContext","authReducer","axios","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERROR","useStripe","useElements","CardElement","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","myerror","subscribed","state","dispatch","loadUser","res","get","type","payload","data","err","register","FormData","config","headers","post","response","msg","login","logout","clearErrors","email","setEmail","stripe","elements","handleSubmitSub","myMail","formDatas","result","createPaymentMethod","card","getElement","billing_details","error","console","log","message","paymentMethod","id","client_secret","status","confirmCardPayment","then","children"],"mappings":"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","sourcesContent":["import React, { useReducer, useState } from \"react\";\r\nimport AuthContext from \"./authContext\";\r\nimport authReducer from \"./authReducer\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"../../../utils/setAuthToken\";\r\n\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERROR,\r\n} from \"../types\";\r\n\r\n\r\n// stripe\r\nimport {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\r\n\r\n\r\nconst AuthState = (props) => {\r\n  // Navigation\r\n\r\n  const initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null,\r\n    myerror: null,\r\n    subscribed : false\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  \r\n\r\n  ///load user\r\n\r\n  const loadUser = async () => {\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n      const res = await axios.get(\"/auth\");\r\n\r\n      dispatch({ type: USER_LOADED, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: AUTH_ERROR });\r\n    }\r\n  };\r\n\r\n  //register user\r\n\r\n  const register = async (FormData) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(\"/users\", FormData, config);\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      loadUser();\r\n    } catch (err) {\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n        payload: err.response.data.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  //login user\r\n  const login = async (FormData) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(\"/auth\", FormData, config);\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      loadUser();\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: err.response.data.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  //logout user\r\n  const logout = () =>\r\n    dispatch({\r\n      type: LOGOUT,\r\n    });\r\n\r\n  //clear errors\r\n  const clearErrors = () => dispatch({ type: CLEAR_ERROR });\r\n\r\n  //SUB\r\n\r\n  const [email, setEmail] = useState('');\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  \r\n  const handleSubmitSub = async (myMail, formDatas) => {\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    const result = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n      billing_details: {\r\n        email: myMail,\r\n      },\r\n    });\r\n\r\n    if (result.error) {\r\n      console.log(result.error.message);\r\n    } else {\r\n      const res = await axios.post('/sub', {'payment_method': result.paymentMethod.id, 'email': myMail});\r\n      // eslint-disable-next-line camelcase\r\n      const {client_secret, status} = res.data;\r\n\r\n      if (status === 'requires_action') {\r\n        stripe.confirmCardPayment(client_secret).then(function(result) {\r\n          if (result.error) {\r\n            console.log('There was an issue!');\r\n            \r\n            console.log(result.error);\r\n            // Display error message in your UI.\r\n            // The card was declined (i.e. insufficient funds, card has expired, etc)\r\n            \r\n            console.log('You got the money!');\r\n            // Show a success message to your customer\r\n            \r\n          }\r\n        });\r\n      } else {\r\n        register(formDatas)\r\n        console.log('You got the moneys!');\r\n      }\r\n    }\r\n  };\r\n\r\n  //RETURN\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        myerror: state.myerror,\r\n        register,\r\n        loadUser,\r\n        login,\r\n        logout,\r\n        clearErrors,\r\n        handleSubmitSub\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}