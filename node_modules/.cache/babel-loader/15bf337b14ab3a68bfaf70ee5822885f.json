{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adeola.bamigboye\\\\Desktop\\\\generation\\\\client\\\\src\\\\components\\\\context\\\\profile\\\\ProfileState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect, useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport ProfileContext from \"./profileContext\";\nimport profileReducer from \"./profileReducer\";\nimport axios from \"axios\";\nimport { ADD_PROFILE, DELETE_PROFILE, SET_CURRENT, CLEAR_CURRENT, UPDATE_PROFILE, FILTER_PROFILES, CLEAR_FILTER, CONTACT_ERROR, GET_PROFILES, CLEAR_PROFILES } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileState = props => {\n  _s();\n\n  const initialState = {\n    profiles: [],\n    current: null,\n    filtered: null,\n    error: null,\n    AllProfiles: []\n  };\n  const [state, dispatch] = useReducer(profileReducer, initialState); //GET profiles\n\n  const getProfiles = async () => {\n    try {\n      const res = await axios.get(\"/showcase\");\n      dispatch({\n        type: GET_PROFILES,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //get All Profiles\n\n\n  const getAllProfiles = async () => {\n    try {\n      const res = await axios.get(\"/search\");\n      dispatch({\n        type: GET_PROFILES,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //get profile picture\n\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(\"Choose File\");\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total)));\n        }\n      }); // Clear percentage\n\n      setTimeout(() => setUploadPercentage(0), 10000);\n      const {\n        fileName,\n        filePath\n      } = res.data;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n      setMessage(\"File Uploaded\");\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage(\"There was a problem with the server\");\n      } else {\n        setMessage(err.response.data.msg);\n      }\n\n      setUploadPercentage(0);\n    }\n  }; //Add profile\n\n\n  const addProfile = async profile => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/showcase\", profile, config);\n      dispatch({\n        type: ADD_PROFILE,\n        payload: res.data\n      });\n      console.log(res.data);\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //delete profile\n\n\n  const deleteProfile = async id => {\n    try {\n      await axios.delete(`/showcase/${id}`);\n      dispatch({\n        type: DELETE_PROFILE,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //update profile\n\n\n  const updateProfile = async profile => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.put(`/showcase/${profile._id}`, profile, config);\n      dispatch({\n        type: UPDATE_PROFILE,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //set current profile\n\n\n  const setCurrent = profile => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: profile\n    });\n  }; //clear current profile\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //filter profiles\n\n\n  const filterProfiles = text => {\n    dispatch({\n      type: FILTER_PROFILES,\n      payload: text\n    });\n  }; //clear filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProfileContext.Provider, {\n    value: {\n      profiles: state.profiles,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      allProfiles: state.AllProfiles,\n      addProfile,\n      deleteProfile,\n      clearCurrent,\n      setCurrent,\n      updateProfile,\n      filterProfiles,\n      clearFilter,\n      getProfiles,\n      onSubmit,\n      uploadedFile,\n      message,\n      file,\n      onChange,\n      getAllProfiles\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileState, \"A+PMX3SGCOK8jaL+SPeNJGV8B1M=\");\n\n_c = ProfileState;\nexport default ProfileState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileState\");","map":{"version":3,"sources":["C:/Users/Adeola.bamigboye/Desktop/generation/client/src/components/context/profile/ProfileState.js"],"names":["React","useReducer","useEffect","useState","v4","uuid","ProfileContext","profileReducer","axios","ADD_PROFILE","DELETE_PROFILE","SET_CURRENT","CLEAR_CURRENT","UPDATE_PROFILE","FILTER_PROFILES","CLEAR_FILTER","CONTACT_ERROR","GET_PROFILES","CLEAR_PROFILES","ProfileState","props","initialState","profiles","current","filtered","error","AllProfiles","state","dispatch","getProfiles","res","get","type","payload","data","err","response","msg","getAllProfiles","onChange","e","setFile","target","files","setFilename","name","file","filename","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","onSubmit","preventDefault","formData","FormData","append","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","fileName","filePath","status","addProfile","profile","config","console","log","deleteProfile","id","delete","updateProfile","put","_id","setCurrent","clearCurrent","filterProfiles","text","clearFilter","allProfiles","children"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ProfileContext from \"./profileContext\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  ADD_PROFILE,\r\n  DELETE_PROFILE,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_PROFILE,\r\n  FILTER_PROFILES,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n  GET_PROFILES,\r\n  CLEAR_PROFILES,\r\n} from \"../types\";\r\n\r\nconst ProfileState = (props) => {\r\n  const initialState = {\r\n    profiles: [],\r\n    current: null,\r\n    filtered: null,\r\n    error: null,\r\n    AllProfiles : []\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(profileReducer, initialState);\r\n\r\n  //GET profiles\r\n  const getProfiles = async () => {\r\n    try {\r\n      const res = await axios.get(\"/showcase\");\r\n     \r\n      dispatch({ type: GET_PROFILES, payload: res.data });\r\n      \r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\r\n    }\r\n  };\r\n\r\n//get All Profiles\r\n\r\nconst getAllProfiles = async () => {\r\n  try {\r\n    const res = await axios.get(\"/search\");\r\n   \r\n    dispatch({ type: GET_PROFILES, payload: res.data });\r\n    \r\n  } catch (err) {\r\n    dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\r\n  }\r\n};\r\n\r\n\r\n\r\n  //get profile picture\r\n\r\n  const onChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [filename, setFilename] = useState(\"Choose File\");\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const res = await axios.post(\"/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          setUploadPercentage(\r\n            parseInt(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n            )\r\n          );\r\n        },\r\n      });\r\n\r\n      // Clear percentage\r\n      setTimeout(() => setUploadPercentage(0), 10000);\r\n\r\n      const { fileName, filePath } = res.data;\r\n\r\n      setUploadedFile({ fileName, filePath });\r\n\r\n      setMessage(\"File Uploaded\");\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        setMessage(\"There was a problem with the server\");\r\n      } else {\r\n        setMessage(err.response.data.msg);\r\n      }\r\n      setUploadPercentage(0);\r\n    }\r\n  };\r\n\r\n  //Add profile\r\n\r\n  const addProfile = async (profile) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\"/showcase\", profile, config);\r\n      dispatch({ type: ADD_PROFILE, payload: res.data });\r\n\r\n      console.log(res.data);\r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\r\n    }\r\n  };\r\n\r\n  //delete profile\r\n\r\n  const deleteProfile = async (id) => {\r\n    try {\r\n      await axios.delete(`/showcase/${id}`);\r\n      dispatch({ type: DELETE_PROFILE, payload: id });\r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\r\n    }\r\n  };\r\n\r\n  //update profile\r\n\r\n  const updateProfile = async (profile) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.put(`/showcase/${profile._id}`, profile, config);\r\n      dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n\r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\r\n    }\r\n  };\r\n\r\n  //set current profile\r\n  const setCurrent = (profile) => {\r\n    dispatch({ type: SET_CURRENT, payload: profile });\r\n  };\r\n\r\n  //clear current profile\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  //filter profiles\r\n  const filterProfiles = (text) => {\r\n    dispatch({ type: FILTER_PROFILES, payload: text });\r\n  };\r\n\r\n  //clear filter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <ProfileContext.Provider\r\n      value={{\r\n        profiles: state.profiles,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        error: state.error,\r\n        allProfiles : state.AllProfiles,\r\n        addProfile,\r\n        deleteProfile,\r\n        clearCurrent,\r\n        setCurrent,\r\n        updateProfile,\r\n        filterProfiles,\r\n        clearFilter,\r\n        getProfiles,\r\n        onSubmit,\r\n        uploadedFile,\r\n        message,\r\n        file,\r\n        onChange,\r\n        getAllProfiles\r\n\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProfileState;\r\n"]},"metadata":{},"sourceType":"module"}