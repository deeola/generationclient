{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adeola.bamigboye\\\\Desktop\\\\generation\\\\client\\\\src\\\\components\\\\context\\\\profile\\\\ProfileState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect, useState } from \"react\";\nimport ProfileContext from \"./profileContext\";\nimport profileReducer from \"./profileReducer\";\nimport axios from \"axios\"; // MUI Components\n// stripe\n\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\nimport { ADD_PROFILE, DELETE_PROFILE, SET_CURRENT, CLEAR_CURRENT, UPDATE_PROFILE, FILTER_PROFILES, CLEAR_FILTER, CONTACT_ERROR, GET_PROFILES, GET_ALLPROFILES, ADD_NOTES } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileState = props => {\n  _s();\n\n  const initialState = {\n    profiles: [],\n    current: null,\n    filtered: null,\n    error: null,\n    AllProfiles: [],\n    notes: []\n  };\n  const [state, dispatch] = useReducer(profileReducer, initialState); //GET profiles\n\n  const getProfiles = async () => {\n    try {\n      const res = await axios.get(\"/showcase\");\n      dispatch({\n        type: GET_PROFILES,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //get All Profiles\n\n\n  const getAllProfiles = async () => {\n    try {\n      const res = await axios.get(\"/search\");\n      dispatch({\n        type: GET_ALLPROFILES,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  useEffect(() => {\n    getAllProfiles(); //eslint-disable-next-line\n  }, []); //get profile picture\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(\"Choose File\");\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total)));\n        }\n      }); // Clear percentage\n\n      setTimeout(() => setUploadPercentage(0), 10000);\n      const {\n        fileName,\n        filePath\n      } = res.data;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n      setMessage(\"File Uploaded\");\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage(\"There was a problem with the server\");\n      } else {\n        setMessage(err.response.data.msg);\n      }\n\n      setUploadPercentage(0);\n    }\n  }; //Add profile\n\n\n  const addProfile = async profile => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/showcase\", profile, config);\n      dispatch({\n        type: ADD_PROFILE,\n        payload: res.data\n      });\n      console.log(res.data);\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Add Notes\n\n\n  const addNotes = async (note, id) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.put(`/comment/${id}`, note, config);\n      dispatch({\n        type: ADD_NOTES,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //get notes\n\n\n  const getNotes = async id => {\n    try {\n      const res = await axios.get(\"/search\");\n      dispatch({\n        type: GET_ALLPROFILES,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //delete profile\n\n\n  const deleteProfile = async id => {\n    try {\n      await axios.delete(`/showcase/${id}`);\n      dispatch({\n        type: DELETE_PROFILE,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //update profile\n\n\n  const updateProfile = async profile => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.put(`/showcase/${profile._id}`, profile, config);\n      dispatch({\n        type: UPDATE_PROFILE,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //set current profile\n\n\n  const setCurrent = profile => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: profile\n    });\n  }; //clear current profile\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //filter profiles\n\n\n  const filterProfiles = users => {\n    dispatch({\n      type: FILTER_PROFILES,\n      payload: users\n    });\n    console.log(users);\n  }; //clear filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  }; //SUB\n\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const [email, setEmail] = useState('');\n\n  const handleSubmitSub = async event => {\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const result = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n      billing_details: {\n        email: email\n      }\n    });\n\n    if (result.error) {\n      console.log(result.error.message);\n    } else {\n      const res = await axios.post('/sub', {\n        'payment_method': result.paymentMethod.id,\n        'email': email\n      }); // eslint-disable-next-line camelcase\n\n      const {\n        client_secret,\n        status\n      } = res.data;\n\n      if (status === 'requires_action') {\n        stripe.confirmCardPayment(client_secret).then(function (result) {\n          if (result.error) {\n            console.log('There was an issue!');\n            console.log(result.error); // Display error message in your UI.\n            // The card was declined (i.e. insufficient funds, card has expired, etc)\n          } else {\n            console.log('You got the money!'); // Show a success message to your customer\n          }\n        });\n      } else {\n        console.log('You got the money!'); // No additional information was needed\n        // Show a success message to your customer\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProfileContext.Provider, {\n    value: {\n      profiles: state.profiles,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      allProfiles: state.AllProfiles,\n      notes: state.notes,\n      addProfile,\n      deleteProfile,\n      clearCurrent,\n      setCurrent,\n      updateProfile,\n      filterProfiles,\n      clearFilter,\n      getProfiles,\n      onSubmit,\n      uploadedFile,\n      message,\n      file,\n      onChange,\n      getAllProfiles,\n      addNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileState, \"89XROw9PCPk1FPZW1xIDexBqhnk=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = ProfileState;\nexport default ProfileState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileState\");","map":{"version":3,"sources":["C:/Users/Adeola.bamigboye/Desktop/generation/client/src/components/context/profile/ProfileState.js"],"names":["React","useReducer","useEffect","useState","ProfileContext","profileReducer","axios","useStripe","useElements","CardElement","ADD_PROFILE","DELETE_PROFILE","SET_CURRENT","CLEAR_CURRENT","UPDATE_PROFILE","FILTER_PROFILES","CLEAR_FILTER","CONTACT_ERROR","GET_PROFILES","GET_ALLPROFILES","ADD_NOTES","ProfileState","props","initialState","profiles","current","filtered","error","AllProfiles","notes","state","dispatch","getProfiles","res","get","type","payload","data","err","response","msg","getAllProfiles","onChange","e","setFile","target","files","setFilename","name","file","filename","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","onSubmit","preventDefault","formData","FormData","append","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","fileName","filePath","status","addProfile","profile","config","console","log","addNotes","note","id","put","getNotes","deleteProfile","delete","updateProfile","_id","setCurrent","clearCurrent","filterProfiles","users","clearFilter","stripe","elements","email","setEmail","handleSubmitSub","event","result","createPaymentMethod","card","getElement","billing_details","paymentMethod","client_secret","confirmCardPayment","then","allProfiles","children"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useState } from \"react\";\r\nimport ProfileContext from \"./profileContext\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport axios from \"axios\";\r\n\r\n\r\n// MUI Components\r\n\r\n// stripe\r\nimport {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\r\n\r\n\r\nimport {\r\n  ADD_PROFILE,\r\n  DELETE_PROFILE,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_PROFILE,\r\n  FILTER_PROFILES,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n  GET_PROFILES,\r\n  GET_ALLPROFILES,\r\n  ADD_NOTES\r\n} from \"../types\";\r\n\r\nconst ProfileState = (props) => {\r\n  const initialState = {\r\n    profiles: [],\r\n    current: null,\r\n    filtered: null,\r\n    error: null,\r\n    AllProfiles : [],\r\n    notes : []\r\n  };\r\n\r\n \r\n\r\n  const [state, dispatch] = useReducer(profileReducer, initialState);\r\n\r\n  //GET profiles\r\n  const getProfiles = async () => {\r\n    try {\r\n      const res = await axios.get(\"/showcase\");\r\n     \r\n      dispatch({ type: GET_PROFILES, payload: res.data });\r\n      \r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\r\n    }\r\n  };\r\n\r\n//get All Profiles\r\n\r\nconst getAllProfiles = async () => {\r\n  try {\r\n    const res = await axios.get(\"/search\");\r\n   \r\n    dispatch({ type: GET_ALLPROFILES, payload: res.data });\r\n    \r\n  } catch (err) {\r\n    dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\r\n  }\r\n};\r\n\r\n\r\nuseEffect(() => {\r\n  getAllProfiles()\r\n  \r\n  //eslint-disable-next-line\r\n  },[])\r\n\r\n\r\n  //get profile picture\r\n\r\n  const onChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [filename, setFilename] = useState(\"Choose File\");\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const res = await axios.post(\"/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          setUploadPercentage(\r\n            parseInt(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n            )\r\n          );\r\n        },\r\n      });\r\n\r\n      // Clear percentage\r\n      setTimeout(() => setUploadPercentage(0), 10000);\r\n\r\n      const { fileName, filePath } = res.data;\r\n\r\n      setUploadedFile({ fileName, filePath });\r\n\r\n      setMessage(\"File Uploaded\");\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        setMessage(\"There was a problem with the server\");\r\n      } else {\r\n        setMessage(err.response.data.msg);\r\n      }\r\n      setUploadPercentage(0);\r\n    }\r\n  };\r\n\r\n  //Add profile\r\n\r\n  const addProfile = async (profile) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\"/showcase\", profile, config);\r\n      dispatch({ type: ADD_PROFILE, payload: res.data });\r\n\r\n      console.log(res.data);\r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\r\n    }\r\n  };\r\n\r\n  //Add Notes\r\n\r\n  const addNotes = async (note, id) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.put(`/comment/${id}`, note, config);\r\n      dispatch({ type: ADD_NOTES, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\r\n    }\r\n  };\r\n\r\n  //get notes\r\n\r\n  const getNotes = async (id) => {\r\n    try {\r\n      const res = await axios.get(\"/search\");\r\n     \r\n      dispatch({ type: GET_ALLPROFILES, payload: res.data });\r\n      \r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\r\n    }\r\n  }\r\n\r\n \r\n\r\n\r\n  //delete profile\r\n\r\n  const deleteProfile = async (id) => {\r\n    try {\r\n      await axios.delete(`/showcase/${id}`);\r\n      dispatch({ type: DELETE_PROFILE, payload: id });\r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\r\n    }\r\n  };\r\n\r\n  //update profile\r\n\r\n  const updateProfile = async (profile) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.put(`/showcase/${profile._id}`, profile, config);\r\n      dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n\r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  //set current profile\r\n  const setCurrent = (profile) => {\r\n    dispatch({ type: SET_CURRENT, payload: profile });\r\n  };\r\n\r\n  //clear current profile\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  //filter profiles\r\n  const filterProfiles = (users) => {\r\n    dispatch({ type: FILTER_PROFILES, payload: users });\r\n    console.log(users)\r\n  };\r\n\r\n  //clear filter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n\r\n\r\n  //SUB\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const handleSubmitSub = async (event) => {\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    const result = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n      billing_details: {\r\n        email: email,\r\n      },\r\n    });\r\n\r\n    if (result.error) {\r\n      console.log(result.error.message);\r\n    } else {\r\n      const res = await axios.post('/sub', {'payment_method': result.paymentMethod.id, 'email': email});\r\n      // eslint-disable-next-line camelcase\r\n      const {client_secret, status} = res.data;\r\n\r\n      if (status === 'requires_action') {\r\n        stripe.confirmCardPayment(client_secret).then(function(result) {\r\n          if (result.error) {\r\n            console.log('There was an issue!');\r\n            console.log(result.error);\r\n            // Display error message in your UI.\r\n            // The card was declined (i.e. insufficient funds, card has expired, etc)\r\n          } else {\r\n            console.log('You got the money!');\r\n            // Show a success message to your customer\r\n          }\r\n        });\r\n      } else {\r\n        console.log('You got the money!');\r\n        // No additional information was needed\r\n        // Show a success message to your customer\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <ProfileContext.Provider\r\n      value={{\r\n        profiles: state.profiles,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        error: state.error,\r\n        allProfiles : state.AllProfiles,\r\n        notes : state.notes,\r\n        addProfile,\r\n        deleteProfile,\r\n        clearCurrent,\r\n        setCurrent,\r\n        updateProfile,\r\n        filterProfiles,\r\n        clearFilter,\r\n        getProfiles,\r\n        onSubmit,\r\n        uploadedFile,\r\n        message,\r\n        file,\r\n        onChange,\r\n        getAllProfiles,\r\n        addNotes\r\n\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProfileState;\r\n"]},"metadata":{},"sourceType":"module"}