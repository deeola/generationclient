{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adeola.bamigboye\\\\Desktop\\\\generation\\\\client\\\\src\\\\components\\\\context\\\\profile\\\\ProfileState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect, useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport ProfileContext from \"./profileContext\";\nimport profileReducer from \"./profileReducer\";\nimport axios from \"axios\";\nimport { ADD_PROFILE, DELETE_PROFILE, SET_CURRENT, CLEAR_CURRENT, UPDATE_PROFILE, FILTER_PROFILES, CLEAR_FILTER, CONTACT_ERROR, GET_PROFILES, CLEAR_PROFILES } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileState = props => {\n  _s();\n\n  const initialState = {\n    profiles: [],\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(profileReducer, initialState); //GET profiles\n\n  const getProfiles = async () => {\n    try {\n      const res = await axios.get('/showcase');\n      dispatch({\n        type: GET_PROFILES,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //get profile picture\n\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const [file, setFile] = useState(\"\");\n  const [filename, setFilename] = useState(\"Choose File\");\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total)));\n        }\n      }); // Clear percentage\n\n      setTimeout(() => setUploadPercentage(0), 10000);\n      const {\n        fileName,\n        filePath\n      } = res.data;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n      setMessage(\"File Uploaded\");\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage(\"There was a problem with the server\");\n      } else {\n        setMessage(err.response.data.msg);\n      }\n\n      setUploadPercentage(0);\n    }\n  }; //Add profile\n\n\n  const addProfile = async profile => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/showcase', profile, config);\n      dispatch({\n        type: ADD_PROFILE,\n        payload: res.data\n      });\n      console.log(res.data);\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //delete profile\n\n\n  const deleteProfile = id => {\n    dispatch({\n      type: DELETE_PROFILE,\n      payload: id\n    });\n  }; //set current profile\n\n\n  const setCurrent = profile => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: profile\n    });\n  }; //clear current profile\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //update profile\n\n\n  const updateProfile = profile => {\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: profile\n    });\n  }; //filter profiles\n\n\n  const filterProfiles = text => {\n    dispatch({\n      type: FILTER_PROFILES,\n      payload: text\n    });\n  }; //clear filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProfileContext.Provider, {\n    value: {\n      profiles: state.profiles,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addProfile,\n      deleteProfile,\n      clearCurrent,\n      setCurrent,\n      updateProfile,\n      filterProfiles,\n      clearFilter,\n      getProfiles,\n      onSubmit,\n      uploadedFile,\n      message,\n      file,\n      onChange\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileState, \"A+PMX3SGCOK8jaL+SPeNJGV8B1M=\");\n\n_c = ProfileState;\nexport default ProfileState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileState\");","map":{"version":3,"sources":["C:/Users/Adeola.bamigboye/Desktop/generation/client/src/components/context/profile/ProfileState.js"],"names":["React","useReducer","useEffect","useState","v4","uuid","ProfileContext","profileReducer","axios","ADD_PROFILE","DELETE_PROFILE","SET_CURRENT","CLEAR_CURRENT","UPDATE_PROFILE","FILTER_PROFILES","CLEAR_FILTER","CONTACT_ERROR","GET_PROFILES","CLEAR_PROFILES","ProfileState","props","initialState","profiles","current","filtered","error","state","dispatch","getProfiles","res","get","type","payload","data","err","response","msg","onChange","e","setFile","target","files","setFilename","name","file","filename","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","onSubmit","preventDefault","formData","FormData","append","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","fileName","filePath","status","addProfile","profile","config","console","log","deleteProfile","id","setCurrent","clearCurrent","updateProfile","filterProfiles","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useState} from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ProfileContext from \"./profileContext\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  ADD_PROFILE,\r\n  DELETE_PROFILE,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_PROFILE,\r\n  FILTER_PROFILES,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n  GET_PROFILES,\r\n  CLEAR_PROFILES\r\n} from \"../types\";\r\n\r\nconst ProfileState = (props) => {\r\n  const initialState = {\r\n    profiles: [],\r\n    current: null,\r\n    filtered: null,\r\n    error : null\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(profileReducer, initialState);\r\n\r\n  //GET profiles\r\n  const getProfiles = async () => {\r\n  \r\n\r\n    try{\r\n        const res = await axios.get('/showcase')\r\n        dispatch({ type: GET_PROFILES, payload: res.data});\r\n        \r\n\r\n    } catch(err){\r\n        dispatch({type:CONTACT_ERROR, payload: err.response.msg})\r\n\r\n    }\r\n\r\n  \r\n\r\n};\r\n\r\n//get profile picture\r\n\r\nconst onChange = (e) => {\r\n  setFile(e.target.files[0]);\r\n  setFilename(e.target.files[0].name);\r\n  \r\n};\r\n\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [filename, setFilename] = useState(\"Choose File\");\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  \r\n\r\n\r\nconst onSubmit = async (e) => {\r\n  e.preventDefault();\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n\r\n  try {\r\n    const res = await axios.post(\"/upload\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      onUploadProgress: (progressEvent) => {\r\n        setUploadPercentage(\r\n          parseInt(\r\n            Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n          )\r\n        );\r\n      },\r\n    });\r\n\r\n    // Clear percentage\r\n    setTimeout(() => setUploadPercentage(0), 10000);\r\n\r\n    const { fileName, filePath } = res.data;\r\n\r\n\r\n\r\n    setUploadedFile({ fileName, filePath });\r\n\r\n    setMessage(\"File Uploaded\");\r\n  } catch (err) {\r\n    if (err.response.status === 500) {\r\n      setMessage(\"There was a problem with the server\");\r\n    } else {\r\n      setMessage(err.response.data.msg);\r\n    }\r\n    setUploadPercentage(0);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //Add profile\r\n\r\n  const addProfile = async (profile) => {\r\n      const config = {\r\n          headers : {\r\n              'Content-Type' : 'application/json'\r\n          }\r\n      }\r\n\r\n      try{\r\n          const res = await axios.post('/showcase', profile, config)\r\n          dispatch({ type: ADD_PROFILE, payload: res.data});\r\n\r\n          console.log(res.data)\r\n\r\n      } catch(err){\r\n          dispatch({type:CONTACT_ERROR, payload: err.response.msg})\r\n\r\n      }\r\n\r\n    \r\n\r\n  };\r\n\r\n  //delete profile\r\n\r\n  const deleteProfile = (id) => {\r\n    dispatch({ type: DELETE_PROFILE, payload: id });\r\n  };\r\n\r\n  //set current profile\r\n  const setCurrent = (profile) => {\r\n    dispatch({ type: SET_CURRENT, payload: profile });\r\n  };\r\n\r\n  //clear current profile\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  //update profile\r\n\r\n  const updateProfile = (profile) => {\r\n    dispatch({ type: UPDATE_PROFILE, payload: profile });\r\n  };\r\n\r\n  //filter profiles\r\n  const filterProfiles = (text) => {\r\n    dispatch({ type: FILTER_PROFILES, payload: text });\r\n  };\r\n\r\n  //clear filter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n\r\n  return (\r\n    <ProfileContext.Provider\r\n      value={{\r\n        profiles: state.profiles,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        error : state.error,\r\n        addProfile,\r\n        deleteProfile,\r\n        clearCurrent,\r\n        setCurrent,\r\n        updateProfile,\r\n        filterProfiles,\r\n        clearFilter,\r\n        getProfiles,\r\n        onSubmit,\r\n        uploadedFile,\r\n        message,\r\n        file,\r\n        onChange\r\n\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProfileState;\r\n"]},"metadata":{},"sourceType":"module"}