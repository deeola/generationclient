{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adeola.bamigboye\\\\Desktop\\\\generation\\\\client\\\\src\\\\components\\\\registration\\\\Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport useNote from \"./useNote\";\nimport ValidateNote from \"./ValidateNote\";\nimport { Link } from \"react-router-dom\";\nimport ProfileContext from \"../context/profile/profileContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notes = () => {\n  _s();\n\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const Submitforms = () => {\n    setIsSubmitted(true);\n  };\n\n  const [data, setData] = useState([]); //get ALL profiles\n\n  const profileContext = useContext(ProfileContext);\n  const {\n    getAllProfiles,\n    allProfiles\n  } = profileContext;\n  const {\n    noteValues,\n    handleChangeSign,\n    onSubmitNote,\n    error\n  } = useNote(Submitforms, ValidateNote);\n  useEffect(() => {\n    getAllProfiles();\n\n    if (allProfiles.length !== 0) {\n      console.log(allProfiles);\n    } //eslint-disable-next-line\n\n  }, []); //Make Comment Function\n\n  const makeComment = (text, postId) => {\n    fetch(\"/comment\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        postId,\n        text\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const {\n    message,\n    author\n  } = noteValues;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: allProfiles.map(profile => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            makeComment(e.target[0].value, profile._id);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"add a comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notes, \"WlSEyiYOAlzrUyg6+rXm7L2VS10=\", false, function () {\n  return [useNote];\n});\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["C:/Users/Adeola.bamigboye/Desktop/generation/client/src/components/registration/Notes.js"],"names":["React","useContext","useState","useEffect","useNote","ValidateNote","Link","ProfileContext","Notes","isSubmitted","setIsSubmitted","Submitforms","data","setData","profileContext","getAllProfiles","allProfiles","noteValues","handleChangeSign","onSubmitNote","error","length","console","log","makeComment","text","postId","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","then","res","json","result","newData","map","item","_id","catch","err","message","author","profile","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMS,WAAW,GAAG,MAAM;AACxBD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAGA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC,CALkB,CAOlB;;AACA,QAAMY,cAAc,GAAGb,UAAU,CAACM,cAAD,CAAjC;AACA,QAAM;AAAEQ,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAkCF,cAAxC;AAEA,QAAM;AAAEG,IAAAA,UAAF;AAAcC,IAAAA,gBAAd;AAAgCC,IAAAA,YAAhC;AAA8CC,IAAAA;AAA9C,MAAwDhB,OAAO,CACnEO,WADmE,EAEnEN,YAFmE,CAArE;AAKAF,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,cAAc;;AAEd,QAAIC,WAAW,CAACK,MAAZ,KAAuB,CAA3B,EAA8B;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AACD,KALa,CAOd;;AACD,GARQ,EAQN,EARM,CAAT,CAhBkB,CA0BlB;;AAEA,QAAMQ,WAAW,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACpCC,IAAAA,KAAK,CAAC,UAAD,EAAa;AAChBC,MAAAA,MAAM,EAAE,KADQ;AAEhBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFpB,OAFO;AAMhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBT,QAAAA,MADmB;AAEnBD,QAAAA;AAFmB,OAAf;AANU,KAAb,CAAL,CAWGW,IAXH,CAWSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAXjB,EAYGF,IAZH,CAYSG,MAAD,IAAY;AAChBjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,MAAZ;AACA,YAAMC,OAAO,GAAG5B,IAAI,CAAC6B,GAAL,CAAUC,IAAD,IAAU;AACjC,YAAIA,IAAI,CAACC,GAAL,IAAYJ,MAAM,CAACI,GAAvB,EAA4B;AAC1B,iBAAOJ,MAAP;AACD,SAFD,MAEO;AACL,iBAAOG,IAAP;AACD;AACF,OANe,CAAhB;AAOA7B,MAAAA,OAAO,CAAC2B,OAAD,CAAP;AACD,KAtBH,EAuBGI,KAvBH,CAuBUC,GAAD,IAAS;AACdvB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,GAAZ;AACD,KAzBH;AA0BD,GA3BD;;AA4BA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsB9B,UAA5B;AACA,sBACE;AAAA,2BACE;AAAA,gBACGD,WAAW,CAACyB,GAAZ,CAAiBO,OAAD,iBACf;AAAA,+BACE;AACE,UAAA,QAAQ,EAAGC,CAAD,IAAO;AACfA,YAAAA,CAAC,CAACC,cAAF;AACA1B,YAAAA,WAAW,CAACyB,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYC,KAAb,EAAoBJ,OAAO,CAACL,GAA5B,CAAX;AACD,WAJH;AAAA,kCAME;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA9ED;;GAAMnC,K;UAW0DJ,O;;;KAX1DI,K;AAgFN,eAAeA,KAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport useNote from \"./useNote\";\r\nimport ValidateNote from \"./ValidateNote\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProfileContext from \"../context/profile/profileContext\";\r\n\r\nconst Notes = () => {\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const Submitforms = () => {\r\n    setIsSubmitted(true);\r\n  };\r\n  const [data, setData] = useState([]);\r\n\r\n  //get ALL profiles\r\n  const profileContext = useContext(ProfileContext);\r\n  const { getAllProfiles, allProfiles } = profileContext;\r\n\r\n  const { noteValues, handleChangeSign, onSubmitNote, error } = useNote(\r\n    Submitforms,\r\n    ValidateNote\r\n  );\r\n\r\n  useEffect(() => {\r\n    getAllProfiles();\r\n\r\n    if (allProfiles.length !== 0) {\r\n      console.log(allProfiles);\r\n    }\r\n\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  //Make Comment Function\r\n\r\n  const makeComment = (text, postId) => {\r\n    fetch(\"/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId,\r\n        text,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const { message, author } = noteValues;\r\n  return (\r\n    <div>\r\n      <div>\r\n        {allProfiles.map((profile) => (\r\n          <div>\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                makeComment(e.target[0].value, profile._id);\r\n              }}\r\n            >\r\n              <input type=\"text\" placeholder=\"add a comment\" />\r\n              <button type='submit'>Submit</button>\r\n            </form>\r\n          </div>\r\n        ))}\r\n\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n"]},"metadata":{},"sourceType":"module"}