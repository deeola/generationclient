{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adeola.bamigboye\\\\Desktop\\\\generation\\\\client\\\\src\\\\components\\\\registration\\\\Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport useNote from \"./useNote\";\nimport ValidateNote from \"./ValidateNote\";\nimport { Link } from \"react-router-dom\";\nimport ProfileContext from \"../context/profile/profileContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notes = () => {\n  _s();\n\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const Submitforms = () => {\n    setIsSubmitted(true);\n  };\n\n  const [data, setData] = useState([]); //get ALL profiles\n\n  const profileContext = useContext(ProfileContext);\n  const {\n    getAllProfiles,\n    AllProfiles\n  } = profileContext;\n  useEffect(() => {\n    getAllProfiles();\n    console.log(AllProfiles);\n  }, []);\n  const {\n    noteValues,\n    handleChangeSign,\n    onSubmitNote,\n    error\n  } = useNote(Submitforms, ValidateNote);\n\n  const makeComment = (text, postId) => {\n    fetch(\"/comment\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        postId,\n        text\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const {\n    message,\n    author\n  } = noteValues;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        makeComment(e.target[0].value, item._id);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"add a comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notes, \"2FqgjX5rpAqi19MD0ztG8tHVQBg=\", false, function () {\n  return [useNote];\n});\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["C:/Users/Adeola.bamigboye/Desktop/generation/client/src/components/registration/Notes.js"],"names":["React","useContext","useState","useEffect","useNote","ValidateNote","Link","ProfileContext","Notes","isSubmitted","setIsSubmitted","Submitforms","data","setData","profileContext","getAllProfiles","AllProfiles","console","log","noteValues","handleChangeSign","onSubmitNote","error","makeComment","text","postId","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","then","res","json","result","newData","map","item","_id","catch","err","message","author","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMS,WAAW,GAAG,MAAM;AACxBD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAGA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC,CALkB,CAOlB;;AACA,QAAMY,cAAc,GAAGb,UAAU,CAACM,cAAD,CAAjC;AACA,QAAM;AAAEQ,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAkCF,cAAxC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AAClBY,IAAAA,cAAc;AACdE,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACG,GAHQ,EAGP,EAHO,CAAT;AASA,QAAM;AAAEG,IAAAA,UAAF;AAAcC,IAAAA,gBAAd;AAAgCC,IAAAA,YAAhC;AAA8CC,IAAAA;AAA9C,MAAwDlB,OAAO,CACnEO,WADmE,EAEnEN,YAFmE,CAArE;;AAKA,QAAMkB,WAAW,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACpCC,IAAAA,KAAK,CAAC,UAAD,EAAa;AAChBC,MAAAA,MAAM,EAAE,KADQ;AAEhBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFpB,OAFO;AAMhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBT,QAAAA,MADmB;AAEnBD,QAAAA;AAFmB,OAAf;AANU,KAAb,CAAL,CAWGW,IAXH,CAWSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAXjB,EAYGF,IAZH,CAYSG,MAAD,IAAY;AAChBrB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,MAAZ;AACA,YAAMC,OAAO,GAAG3B,IAAI,CAAC4B,GAAL,CAAUC,IAAD,IAAU;AACjC,YAAIA,IAAI,CAACC,GAAL,IAAYJ,MAAM,CAACI,GAAvB,EAA4B;AAC1B,iBAAOJ,MAAP;AACD,SAFD,MAEO;AACL,iBAAOG,IAAP;AACD;AACF,OANe,CAAhB;AAOA5B,MAAAA,OAAO,CAAC0B,OAAD,CAAP;AACD,KAtBH,EAuBGI,KAvBH,CAuBUC,GAAD,IAAS;AACd3B,MAAAA,OAAO,CAACC,GAAR,CAAY0B,GAAZ;AACD,KAzBH;AA0BD,GA3BD;;AA4BA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsB3B,UAA5B;AACA,sBACE;AAAA,2BACE;AACE,MAAA,QAAQ,EAAG4B,CAAD,IAAO;AACfA,QAAAA,CAAC,CAACC,cAAF;AACAzB,QAAAA,WAAW,CAACwB,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYC,KAAb,EAAoBT,IAAI,CAACC,GAAzB,CAAX;AACD,OAJH;AAAA,6BAME;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlED;;GAAMlC,K;UAoB0DJ,O;;;KApB1DI,K;AAoEN,eAAeA,KAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport useNote from \"./useNote\";\r\nimport ValidateNote from \"./ValidateNote\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProfileContext from \"../context/profile/profileContext\";\r\n\r\n\r\nconst Notes = () => {\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const Submitforms = () => {\r\n    setIsSubmitted(true);\r\n  };\r\n  const [data, setData] = useState([]);\r\n\r\n  //get ALL profiles\r\n  const profileContext = useContext(ProfileContext);\r\n  const { getAllProfiles, AllProfiles } = profileContext;\r\n\r\n  useEffect(() => {\r\ngetAllProfiles();\r\nconsole.log(AllProfiles)\r\n  },[])\r\n\r\n\r\n\r\n\r\n\r\n  const { noteValues, handleChangeSign, onSubmitNote, error } = useNote(\r\n    Submitforms,\r\n    ValidateNote\r\n  );\r\n\r\n  const makeComment = (text, postId) => {\r\n    fetch(\"/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId,\r\n        text,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const { message, author } = noteValues;\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          makeComment(e.target[0].value, item._id);\r\n        }}\r\n      >\r\n        <input type=\"text\" placeholder=\"add a comment\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n"]},"metadata":{},"sourceType":"module"}