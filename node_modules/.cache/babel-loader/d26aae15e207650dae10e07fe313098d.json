{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adeola.bamigboye\\\\Desktop\\\\generation\\\\client\\\\src\\\\components\\\\payment\\\\PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PaymentForm() {\n  _s();\n\n  const elements = useElements();\n  const stripe = useStripe();\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const cardElement = elements.getElement(CardElement);\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    console.log(\"payment intent created\"); //create payment intent on server\n\n    const {\n      clientSecret\n    } = await fetch(\"/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        paymentMethodType: \"card\",\n        currency: \"eur\"\n      })\n    }).then(r => r.json()); //confirm payment on the client\n\n    const {\n      paymentIntent\n    } = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n    console.log(`paymentIntent (${paymentIntent.id}): ${paymentIntent.status}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PaymentForm, \"LbR2vwhQFQyjYnhvTUYMpk6uskc=\", false, function () {\n  return [useElements, useStripe];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["C:/Users/Adeola.bamigboye/Desktop/generation/client/src/components/payment/PaymentForm.js"],"names":["React","CardElement","useElements","useStripe","PaymentForm","elements","stripe","onSubmit","e","preventDefault","cardElement","getElement","console","log","clientSecret","fetch","method","headers","body","JSON","stringify","paymentMethodType","currency","then","r","json","paymentIntent","confirmCardPayment","payment_method","card","id","status"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAoD,yBAApD;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,MAAM,GAAGH,SAAS,EAAxB;;AACA,QAAMI,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,WAAW,GAAGL,QAAQ,CAACM,UAAT,CAAoBV,WAApB,CAApB;;AAGA,QAAI,CAACK,MAAD,IAAW,CAACD,QAAhB,EAA0B;AACxB;AACD;;AAEDO,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAT4B,CAW5B;;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAmB,MAAMC,KAAK,CAAC,wBAAD,EAA2B;AAC7DC,MAAAA,MAAM,EAAE,MADqD;AAE7DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFoD;AAK7DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,iBAAiB,EAAE,MADA;AAEnBC,QAAAA,QAAQ,EAAE;AAFS,OAAf;AALuD,KAA3B,CAAL,CAS5BC,IAT4B,CAStBC,CAAD,IAAOA,CAAC,CAACC,IAAF,EATgB,CAA/B,CAb4B,CAwB5B;;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAoB,MAAMpB,MAAM,CAACqB,kBAAP,CAA0Bb,YAA1B,EAAwC;AACtEc,MAAAA,cAAc,EAAE;AACdC,QAAAA,IAAI,EAAExB,QAAQ,CAACM,UAAT,CAAoBV,WAApB;AADQ;AADsD,KAAxC,CAAhC;AAMAW,IAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBa,aAAa,CAACI,EAAG,MAAKJ,aAAa,CAACK,MAAO,EAAzE;AAGD,GAnCD;;AAoCA,sBACE;AAAM,IAAA,QAAQ,EAAExB,QAAhB;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA7CQH,W;UACUF,W,EACFC,S;;;KAFRC,W;AA+CT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\n\r\nfunction PaymentForm() {\r\n  const elements = useElements();\r\n  const stripe = useStripe();\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    console.log(\"payment intent created\");\r\n\r\n    //create payment intent on server\r\n\r\n    const { clientSecret } = await fetch(\"/create-payment-intent\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        paymentMethodType: \"card\",\r\n        currency: \"eur\",\r\n      }),\r\n    }).then((r) => r.json());\r\n\r\n    //confirm payment on the client\r\n\r\n    const { paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n      },\r\n    });\r\n\r\n    console.log(`paymentIntent (${paymentIntent.id}): ${paymentIntent.status}`);\r\n\r\n    \r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <CardElement />\r\n      <button>Pay</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default PaymentForm;\r\n"]},"metadata":{},"sourceType":"module"}