{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import axios from \"axios\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport AuthContext from \"../context/auth/authContext\";\nimport AlertContext from \"../context/alert/alertContext\";\nimport ProfileContext from \"../context/profile/profileContext\";\n\nconst useSearch = (callback, ValidateSearch) => {\n  _s();\n\n  const history = useNavigate();\n  const authContext = useContext(AuthContext);\n  const alertContext = useContext(AlertContext);\n  const profileContext = useContext(ProfileContext);\n  const {\n    filterProfiles,\n    clearFilter,\n    filtered,\n    loading,\n    getAllProfiles,\n    AllProfiles\n  } = profileContext;\n  const {\n    setAlert\n  } = alertContext;\n  const {\n    register,\n    myerror,\n    clearErrors,\n    isAuthenticated\n  } = authContext; //GENERAL\n\n  const [error, setError] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false); //SIGN UP\n\n  const [values, setValue] = useState({\n    name: \"\",\n    date: \"\"\n  }); //handle change event\n\n  const handleChangeSearch = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValue({ ...values,\n      [name]: value\n    });\n  }; //Set to local storage\n  //On submit Event\n\n\n  const users = values; //   useEffect(() => {\n  //     if(isAuthenticated){\n  //      history(\"/\");\n  //     }\n  //     if(myerror === 'User already exists') {\n  //       setAlert(myerror, 'danger')\n  //       clearErrors()\n  //     }\n  //     // eslint-disable-next-line\n  //   },[myerror, isAuthenticated, history])\n  //NEW USE EFFECT\n\n  useEffect(() => {\n    if (filtered === null) {\n      users.text = \"\";\n      users.date = \"\";\n    }\n\n    getAllProfiles();\n  }, []);\n\n  const onSubmitSearch = e => {\n    setError(ValidateSearch(values)); // register(users)\n\n    if (users.text !== \"\" && users.date !== \"\") {\n      filterProfiles(e.target.users);\n    } else {\n      clearFilter();\n    }\n\n    e.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(error).length === 0 && isSubmitting) {\n      callback(); // history(\"/Login\");\n    } // eslint-disable-next-line\n\n  }, [error]);\n  return {\n    handleChangeSearch,\n    values,\n    onSubmitSearch,\n    error\n  };\n};\n\n_s(useSearch, \"8uOX9qPQ4vqBnibezWNIaQU4b8k=\", false, function () {\n  return [useNavigate];\n});\n\nexport default useSearch;","map":{"version":3,"sources":["C:/Users/Adeola.bamigboye/Desktop/generation/client/src/components/registration/useSearch.js"],"names":["useEffect","useState","useContext","useNavigate","AuthContext","AlertContext","ProfileContext","useSearch","callback","ValidateSearch","history","authContext","alertContext","profileContext","filterProfiles","clearFilter","filtered","loading","getAllProfiles","AllProfiles","setAlert","register","myerror","clearErrors","isAuthenticated","error","setError","isSubmitting","setIsSubmitting","values","setValue","name","date","handleChangeSearch","e","value","target","users","text","onSubmitSearch","preventDefault","Object","keys","length"],"mappings":"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","sourcesContent":["// import axios from \"axios\";\r\nimport { useEffect, useState, useContext} from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport AuthContext from \"../context/auth/authContext\";\r\nimport AlertContext from \"../context/alert/alertContext\";\r\nimport ProfileContext from \"../context/profile/profileContext\";\r\n\r\n\r\n\r\nconst useSearch = (callback, ValidateSearch) => {\r\n  const history = useNavigate();\r\n\r\n  const authContext = useContext(AuthContext)\r\n  const alertContext = useContext(AlertContext)\r\n  const profileContext = useContext(ProfileContext);\r\n  const {\r\n    filterProfiles,\r\n    clearFilter,\r\n    filtered,\r\n    loading,\r\n    getAllProfiles,\r\n    AllProfiles,\r\n  } = profileContext;\r\n\r\n\r\nconst {setAlert} = alertContext;\r\n  const {register,myerror,clearErrors, isAuthenticated} = authContext\r\n\r\n  //GENERAL\r\n\r\n  const [error, setError] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  //SIGN UP\r\n  const [values, setValue] = useState({\r\n    name: \"\",\r\n    date: \"\"\r\n  });\r\n\r\n  //handle change event\r\n\r\n  const handleChangeSearch = (e) => {\r\n\r\n    const { name, value } = e.target;\r\n    setValue({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  //Set to local storage\r\n\r\n\r\n  //On submit Event\r\n\r\n  const users = values;\r\n\r\n\r\n//   useEffect(() => {\r\n\r\n//     if(isAuthenticated){\r\n//      history(\"/\");\r\n//     }\r\n//     if(myerror === 'User already exists') {\r\n//       setAlert(myerror, 'danger')\r\n//       clearErrors()\r\n//     }\r\n\r\n//     // eslint-disable-next-line\r\n//   },[myerror, isAuthenticated, history])\r\n\r\n//NEW USE EFFECT\r\n\r\nuseEffect(() => {\r\n    if (filtered === null) {\r\n      users.text = \"\";\r\n      users.date = \"\";\r\n    }\r\n    getAllProfiles();\r\n  },[]);\r\n\r\n\r\n  const onSubmitSearch = (e) => {\r\n    setError(ValidateSearch(values));\r\n    // register(users)\r\n    if (users.text !== \"\" && users.date !== \"\" ) {\r\n        filterProfiles(e.target.users);\r\n      } else {\r\n        clearFilter();\r\n      }\r\n    e.preventDefault();\r\n    \r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(error).length === 0 && isSubmitting) {\r\n      callback();\r\n      // history(\"/Login\");\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [error]);\r\n\r\n  return {\r\n    handleChangeSearch,\r\n    values,\r\n    onSubmitSearch,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useSearch;\r\n"]},"metadata":{},"sourceType":"module"}